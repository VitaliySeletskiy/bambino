/*! HTML5 Boilerplate v6.0.1 | MIT License | https://html5boilerplate.com/ */

/*
 * What follows is the result of much research on cross-browser styling.
 * Credit left inline and big thanks to Nicolas Gallagher, Jonathan Neal,
 * Kroc Camen, and the H5BP dev community and team.
 */

/* ==========================================================================
   Base styles: opinionated defaults
   ========================================================================== */

html {
    color: #222;
    font-size: 1em;
    line-height: 1.4;
}

/*
 * Remove text-shadow in selection highlight:
 * https://twitter.com/miketaylr/status/12228805301
 *
 * Vendor-prefixed and regular ::selection selectors cannot be combined:
 * https://stackoverflow.com/a/16982510/7133471
 *
 * Customize the background color to match your design.
 */

::-moz-selection {
    background: #b3d4fc;
    text-shadow: none;
}

::selection {
    background: #b3d4fc;
    text-shadow: none;
}

/*
 * A better looking default horizontal rule
 */

hr {
    display: block;
    height: 1px;
    border: 0;
    border-top: 1px solid #ccc;
    margin: 1em 0;
    padding: 0;
}

/*
 * Remove the gap between audio, canvas, iframes,
 * images, videos and the bottom of their containers:
 * https://github.com/h5bp/html5-boilerplate/issues/440
 */

audio,
canvas,
iframe,
img,
svg,
video {
    vertical-align: middle;
}

/*
 * Remove default fieldset styles.
 */

fieldset {
    border: 0;
    margin: 0;
    padding: 0;
}

/*
 * Allow only vertical resizing of textareas.
 */

textarea {
    resize: vertical;
}

/* ==========================================================================
   Browser Upgrade Prompt
   ========================================================================== */

.browserupgrade {
    margin: 0.2em 0;
    background: #ccc;
    color: #000;
    padding: 0.2em 0;
}

/* ==========================================================================
   Author's custom styles
   ========================================================================== */
   html,
   body {
     width: 100%;
     height: 100%;
   }
   
   html {
     display: table;
   }
   
   body {
     background-image: url(../img/heavens.jpg);
     background-attachment: fixed;
     background-size: cover;
     background-color: #358c9d;
     display: table-cell;
     vertical-align: middle;
     font-family: "Exo 2", sans-serif;
     color: #d8d8d8;
   }
   body:before {
     content: "";
     position: fixed;
     top: 0;
     left: 0;
     width: 100%;
     height: 100%;
     background: #0006;
     opacity: 0.85;
   }
   
   h1,
   h3,
   p {
     margin: 0;
     text-transform: uppercase;
   }
   
   h1 {
     font-weight: 400;
     color: #fff;
     margin-bottom: 60px;
   }
   
   h3 {
     font-size: 1.5rem;
     margin-bottom: 5px;
     color: #fff;
   }
   
   p {
     font-size: 0.8rem;
     font-weight: 400;
     letter-spacing: 2px;
   }
   
   .wrapper {
     position: relative;
     max-width: 1330px;
     margin: 0 auto;
     padding: 80px 20px;
   }
   
   .roll-up {
     overflow: hidden;
     position: relative;
   }
   .roll-up > span {
     display: inline-block;
     position: relative;
   }
   .roll-up > span:nth-child(1) {
     transition-delay: 0.03s;
   }
   .roll-up > span:nth-child(2) {
     transition-delay: 0.06s;
   }
   .roll-up > span:nth-child(3) {
     transition-delay: 0.09s;
   }
   .roll-up > span:nth-child(4) {
     transition-delay: 0.12s;
   }
   .roll-up > span:nth-child(5) {
     transition-delay: 0.15s;
   }
   .roll-up > span:nth-child(6) {
     transition-delay: 0.18s;
   }
   .roll-up > span:nth-child(7) {
     transition-delay: 0.21s;
   }
   .roll-up > span > span {
     display: inline-block;
     transition: 0.6s cubic-bezier(0.7, 0.01, 0.37, 1);
     transition-delay: inherit;
   }
   .roll-up > span > span:nth-child(1) {
     position: relative;
   }
   .roll-up > span > span:nth-child(2) {
     position: absolute;
     transform: translateY(100%);
     left: 0;
     color: #16e590;
   }
   
   .text-reveal {
     position: relative;
     overflow: hidden;
   }
   .text-reveal span {
     display: block;
     transition: cubic-bezier(0.7, 0.01, 0.37, 1) 0.6s;
   }
   .text-reveal > span:nth-child(2) {
     position: absolute;
     top: 0;
     left: 0;
     color: #fff;
   }
   .text-reveal > span:nth-child(2) > span {
     overflow: hidden;
     transform: translateX(-100%);
   }
   .text-reveal > span:nth-child(2) > span:nth-child(1) {
     transition-delay: 0.1s;
   }
   .text-reveal > span:nth-child(2) > span:nth-child(2) {
     transition-delay: 0.2s;
   }
   .text-reveal > span:nth-child(2) > span:nth-child(3) {
     transition-delay: 0.3s;
   }
   .text-reveal > span:nth-child(2) > span:nth-child(4) {
     transition-delay: 0.4s;
   }
   .text-reveal > span:nth-child(2) > span:nth-child(5) {
     transition-delay: 0.5s;
   }
   .text-reveal > span:nth-child(2) > span:nth-child(6) {
     transition-delay: 0.6s;
   }
   .text-reveal > span:nth-child(2) > span:nth-child(7) {
     transition-delay: 0.7s;
   }
   .text-reveal > span:nth-child(2) > span > span {
     transform: translateX(100%);
     transition-delay: inherit;
   }
   
   .play-button {
     display: inline-block;
     width: 70px;
     height: 70px;
     transition: 0.5s;
   }
   .play-button svg {
     overflow: visible;
   }
   .play-button .polygon {
     fill: #16e590;
     transition: transform 0.5s, fill 0.5s;
     transition-timing-function: cubic-bezier(0.7, 0.01, 0.37, 1);
     transform-origin: 50% 50%;
   }
   
   .card {
     display: inline-flex;
     align-items: center;
     justify-content: center;
     position: relative;
     max-width: 300px;
     width: 100%;
     height: 200px;
     padding: 20px;
     box-shadow: 0 16px 24px 2px rgba(0, 0, 0, 0.14), 0 6px 30px 5px rgba(0, 0, 0, 0.12), 0 8px 10px -5px rgba(0, 0, 0, 0.3);
     background-size: cover;
     cursor: pointer;
     margin: 0 100px 60px 0;
   }
   .card:before {
     content: "";
     display: block;
     height: 100%;
     width: 100%;
     position: absolute;
     background-image: linear-gradient(to bottom, rgba(0, 0, 0, 0) 0%, rgba(0, 0, 0, 0.75) 100%);
   }
   .card .card__content {
     z-index: 1;
   }
   .card .card__content .card__content--description {
     position: absolute;
     bottom: 20px;
     right: 0;
     margin-right: -80px;
     text-align: left;
     max-width: 175px;
   }
   .card:hover .play-button {
     transform: scale(1.1);
   }
   .card:hover .play-button .polygon {
     transform: translateZ(0px) rotate(90deg);
     fill: #67fbbe;
   }
   .card:hover .roll-up > span > span:nth-child(1) {
     transform: translateY(-100%);
   }
   .card:hover .roll-up > span > span:nth-child(2) {
     transform: translateY(0);
   }
   .card:hover .text-reveal > span:nth-child(2) > span,
   .card:hover .text-reveal > span:nth-child(2) > span > span {
     transform: translateX(0);
   }
   

/* ==========================================================================
   Helper classes
   ========================================================================== */

/*
 * Hide visually and from screen readers
 */

.hidden {
    display: none !important;
}

/*
 * Hide only visually, but have it available for screen readers:
 * https://snook.ca/archives/html_and_css/hiding-content-for-accessibility
 *
 * 1. For long content, line feeds are not interpreted as spaces and small width
 *    causes content to wrap 1 word per line:
 *    https://medium.com/@jessebeach/beware-smushed-off-screen-accessible-text-5952a4c2cbfe
 */

.visuallyhidden {
    border: 0;
    clip: rect(0 0 0 0);
    -webkit-clip-path: inset(50%);
    clip-path: inset(50%);
    height: 1px;
    margin: -1px;
    overflow: hidden;
    padding: 0;
    position: absolute;
    width: 1px;
    white-space: nowrap; /* 1 */
}

/*
 * Extends the .visuallyhidden class to allow the element
 * to be focusable when navigated to via the keyboard:
 * https://www.drupal.org/node/897638
 */

.visuallyhidden.focusable:active,
.visuallyhidden.focusable:focus {
    clip: auto;
    -webkit-clip-path: none;
    clip-path: none;
    height: auto;
    margin: 0;
    overflow: visible;
    position: static;
    width: auto;
    white-space: inherit;
}

/*
 * Hide visually and from screen readers, but maintain layout
 */

.invisible {
    visibility: hidden;
}

/*
 * Clearfix: contain floats
 *
 * For modern browsers
 * 1. The space content is one way to avoid an Opera bug when the
 *    `contenteditable` attribute is included anywhere else in the document.
 *    Otherwise it causes space to appear at the top and bottom of elements
 *    that receive the `clearfix` class.
 * 2. The use of `table` rather than `block` is only necessary if using
 *    `:before` to contain the top-margins of child elements.
 */

.clearfix:before,
.clearfix:after {
    content: " "; /* 1 */
    display: table; /* 2 */
}

.clearfix:after {
    clear: both;
}

/* ==========================================================================
   EXAMPLE Media Queries for Responsive Design.
   These examples override the primary ('mobile first') styles.
   Modify as content requires.
   ========================================================================== */

@media only screen and (min-width: 35em) {
    /* Style adjustments for viewports that meet the condition */
}

@media print,
       (-webkit-min-device-pixel-ratio: 1.25),
       (min-resolution: 1.25dppx),
       (min-resolution: 120dpi) {
    /* Style adjustments for high resolution devices */
}

/* ==========================================================================
   Print styles.
   Inlined to avoid the additional HTTP request:
   http://www.phpied.com/delay-loading-your-print-css/
   ========================================================================== */

@media print {
    *,
    *:before,
    *:after {
        background: transparent !important;
        color: #000 !important; /* Black prints faster:
                                   http://www.sanbeiji.com/archives/953 */
        box-shadow: none !important;
        text-shadow: none !important;
    }

    a,
    a:visited {
        text-decoration: underline;
    }

    a[href]:after {
        content: " (" attr(href) ")";
    }

    abbr[title]:after {
        content: " (" attr(title) ")";
    }

    /*
     * Don't show links that are fragment identifiers,
     * or use the `javascript:` pseudo protocol
     */

    a[href^="#"]:after,
    a[href^="javascript:"]:after {
        content: "";
    }

    pre {
        white-space: pre-wrap !important;
    }
    pre,
    blockquote {
        border: 1px solid #999;
        page-break-inside: avoid;
    }

    /*
     * Printing Tables:
     * http://css-discuss.incutio.com/wiki/Printing_Tables
     */

    thead {
        display: table-header-group;
    }

    tr,
    img {
        page-break-inside: avoid;
    }

    p,
    h2,
    h3 {
        orphans: 3;
        widows: 3;
    }

    h2,
    h3 {
        page-break-after: avoid;
    }
}
